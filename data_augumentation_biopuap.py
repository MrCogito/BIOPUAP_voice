# -*- coding: utf-8 -*-
"""Data_augumentation_biopuap.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16G2spTTwIWo8kvkOnmQktpMWUSDq_I74
"""

!pip install audiomentations

import numpy as np
import os
import librosa
import librosa.display
import IPython.display as ipd
import audiomentations
from audiomentations.core.audio_loading_utils import load_sound_file
from audiomentations import Compose, AddGaussianNoise, AddBackgroundNoise, AddGaussianSNR
import soundfile as sf
import scipy.io

from google.colab import drive
drive.mount('/content/gdrive')

#single clip - made for testing purpose
"""
sound, sr =  librosa.load('/content/gdrive/MyDrive/BioPuap/dev-clean_samples/LibriSpeech/dev-clean/1462/170138/1462-170138-0000.flac') # path to audio clip 
print(sound.dtype)

augment = Compose([
    #AddGaussianNoise(min_amplitude=0.001, max_amplitude=0.015, p=0.5),
     AddGaussianSNR(min_snr_in_db=1.2, max_snr_in_db=30 )
    #AddBackgroundNoise(noise_folder_path , min_snr_in_db=1,max_snr_in_db=2) 
])

augumented_sound = augment(samples=sound, sample_rate=sr)
sf.write('test10_07.flac', augumented_sound,sr) # save file
*/ 
"""

folder_path = input("Path to audio clips: ")
noise_folder_path = input("Path to noise clips ") #path to folder with noise audio
min_snr = input("min snr in db: ")
max_snr = input("max snr in db: ")
delete = input("delete files? (yes/no): ")



augment = Compose([
    #AddGaussianNoise(min_amplitude=0.001, max_amplitude=0.015, p=0.5),
     AddGaussianSNR(min_snr_in_db=min_snr, max_snr_in_db=max_snr )
    #AddBackgroundNoise(noise_folder_path , min_snr_in_db=1,max_++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++snr_in_db=2) 
])

#folder_path = '/content/gdrive/MyDrive/BioPuap/dev-clean_samples/LibriSpeech/dev-clean/1462/170138/1462-170138-0000.flac#'

for root, dirs, files in os.walk(folder_path):
   for name in files:
      print(os.path.join(root, name, ))
      if name.endswith(".flac"):
        sound, sr = librosa.load(os.path.join(root, name,))
        augumented_sound = augment(samples=sound, sample_rate=sr)
        sf.write(os.path.join(root, name,) + "_noise.flac", augumented_sound,sr)  
        if (delete == "yes"):
          os.remove(os.path.join(root, name, ))   # To remove created files - used for experiments 
   for name in dirs:
      print(os.path.join(root, name))

#Calculate SNR

def signaltonoise(a, axis=0, ddof=0):
    a = np.asanyarray(a)
    m = a.mean(axis)
    sd = a.std(axis=axis, ddof=ddof)
    return np.where(sd == 0, 0, m/sd)

SNR = signaltonoise(augumented_sound)
print(SNR)